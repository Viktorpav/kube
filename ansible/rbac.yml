---
- name: Install required packages for k8s config
  apt:
    name: python3-kubernetes
    update_cache: yes
    state: present

- name: Create kube-controller-manager ServiceAccount
  k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: kube-controller-manager
        namespace: kube-system

- name: Create ClusterRole for kube-controller-manager
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: system:kube-controller-manager
      rules:
        # Full access to all core resources
        - apiGroups: [""]
          resources: ["*"]
          verbs: ["*"]
        # Explicit permissions for problematic resources
        - apiGroups: [""]
          resources:
            - "events"
            - "secrets"
            - "serviceaccounts"
            - "serviceaccounts/token"
            - "pods"
            - "nodes"
          verbs: ["*"]
        # Other necessary API groups
        - apiGroups:
            - "apps"
            - "batch"
            - "extensions"
            - "policy"
            - "storage.k8s.io"
            - "authentication.k8s.io"
            - "certificates.k8s.io"
            - "coordination.k8s.io"
          resources: ["*"]
          verbs: ["*"]
        # Required for leader election
        - apiGroups: ["coordination.k8s.io"]
          resources: ["leases"]
          verbs: ["*"]
        # Required for CSR approval
        - apiGroups: ["certificates.k8s.io"]
          resources: ["certificatesigningrequests"]
          verbs: ["*"]
        - apiGroups: ["crd.projectcalico.org"]
          resources: ["*"]
          verbs: ["*"]
        # Add scheduling API permissions
        - apiGroups: ["scheduling.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        # Add admission control permissions
        - apiGroups: ["admissionregistration.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        # Explicitly add RBAC permissions
        - apiGroups: ["rbac.authorization.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["networkpolicies.networking.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["networking.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["customresourcedefinitions.apiextensions.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["apiextensions.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["policy.networking.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["discovery.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["apiregistration.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["flowcontrol.apiserver.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["node.k8s.io"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["autoscaling"]
          resources: ["*"]
          verbs: ["*"]
        - apiGroups: ["tokenreviews.authentication.k8s.io"]
          resources: ["*"]
          verbs: ["*"]

        # Allow non-resource endpoints
        - nonResourceURLs: ["*"]
          verbs: ["*"]

- name: Create ClusterRoleBinding
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: system:kube-controller-manager
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:kube-controller-manager
      subjects:
        - kind: ServiceAccount
          name: kube-controller-manager
          namespace: kube-system
        - kind: User
          name: system:kube-controller-manager
          apiGroup: rbac.authorization.k8s.io

- name: Create kube-system Role
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: system:controller-manager-service-account
        namespace: kube-system
      rules:
        - apiGroups: [""]
          resources: ["serviceaccounts", "secrets"]
          verbs: ["*"]
        - apiGroups: [""]
          resources: ["events"]
          verbs: ["*"]

- name: Create kube-system RoleBinding
  k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: system:controller-manager-service-account
        namespace: kube-system
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: system:controller-manager-service-account
      subjects:
        - kind: ServiceAccount
          name: kube-controller-manager
          namespace: kube-system
        - kind: User
          name: system:kube-controller-manager
          apiGroup: rbac.authorization.k8s.io

- name: Restart kube-controller-manager pods
  shell: |
    kubectl -n kube-system delete pod -l component=kube-controller-manager

- name: Wait for kube-controller-manager pods to be ready
  shell: |
    kubectl -n kube-system wait pod -l component=kube-controller-manager --for=condition=Ready --timeout=300s
