- name: Install Ingress NGINX
  kubernetes.core.helm:
    name: ingress-nginx
    chart_ref: ingress-nginx/ingress-nginx
    release_namespace: ingress-nginx
    create_namespace: true
    wait: true
    wait_timeout: 10m
    values:
      controller:
        service:
          type: NodePort
          nodePorts:
            http: 30080
            https: 30443
  run_once: true

- name: Wait for Ingress controller
  kubernetes.core.k8s_info:
    kind: Deployment
    name: ingress-nginx-controller
    namespace: ingress-nginx
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: 300
  run_once: true

- name: Create Grafana Ingress
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: grafana
        namespace: monitoring
      spec:
        ingressClassName: nginx
        rules:
          - host: grafana.local
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: monitoring-grafana
                      port:
                        number: 80
  run_once: true
  retries: 10
  delay: 15
  register: result
  until: result is succeeded

- name: Create Prometheus Ingress
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: prometheus
        namespace: monitoring
      spec:
        ingressClassName: nginx
        rules:
          - host: prometheus.local
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: monitoring-kube-prometheus-prometheus
                      port:
                        number: 9090
  run_once: true
  retries: 10
  delay: 15
  register: result
  until: result is succeeded

- name: Expose ArgoCD via Ingress
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: argocd-server-ingress
        namespace: argocd
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      spec:
        ingressClassName: nginx
        rules:
          - host: argocd.local
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: argocd-server
                      port:
                        number: 443
  run_once: true
  retries: 10
  delay: 15
  register: result
  until: result is succeeded
