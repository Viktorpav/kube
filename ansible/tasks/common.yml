---
- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb >= 0

- name: Configure kernel modules
  copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter

- name: Load kernel modules
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter
    - rbd
    - libceph

- name: Configure sysctl parameters
  copy:
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Apply sysctl parameters
  command: sysctl --system

- name: Install required packages
  apt:
    name:
      - containerd
      - gnupg2
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - rsync
      - git
      - vim
      - jq
      - lvm2
      - xfsprogs
    update_cache: yes
    state: present

- name: Ensure pip is installed
  ansible.builtin.package:
    name: python3-pip
    state: present

- name: Install required Python libraries for Kubernetes modules
  ansible.builtin.pip:
    name:
      - kubernetes
      - openshift
    state: present
    executable: pip3

- name: Configure containerd
  shell: |
    mkdir -p /etc/containerd
    containerd config default | tee /etc/containerd/config.toml
    sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

- name: Update pause image version
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: 'sandbox_image\s*=\s*".*"'
    line: 'sandbox_image = "registry.k8s.io/pause:3.10"'
    backrefs: yes

- name: Start and enable containerd
  systemd:
    name: containerd
    state: restarted
    enabled: yes

- name: Add Kubernetes apt key
  shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes repository
  copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"

- name: Install Kubernetes components
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    update_cache: yes
    state: present

- name: Hold Kubernetes packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Enable kubelet
  systemd:
    name: kubelet
    enabled: yes
    state: started
