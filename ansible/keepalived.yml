---
- name: Install Keepalived
  apt:
    name: keepalived
    state: present
    update_cache: yes

- name: Set Keepalived priority based on node position
  set_fact:
    keepalived_priority: "{{ 100 + (groups['k8s_masters'] | length) - (groups['k8s_masters'].index(inventory_hostname)) }}"

- name: Create check script
  copy:
    dest: /usr/local/bin/check_apiserver.sh
    mode: "0755"
    content: |
      #!/bin/bash
      APISERVER=https://127.0.0.1:6443
      KUBE_CONFIG=/etc/kubernetes/admin.conf

      # Use kubectl with fallback to curl
      if [ -f $KUBE_CONFIG ]; then
        timeout 3 kubectl --kubeconfig=$KUBE_CONFIG get nodes >/dev/null 2>&1 || exit 1
      else
        curl -sk --max-time 3 $APISERVER/healthz >/dev/null 2>&1 || exit 1
      fi

- name: Configure Keepalived
  copy:
    dest: /etc/keepalived/keepalived.conf
    content: |
      global_defs {
        router_id K8S_MASTER_{{ router_id }}
        enable_script_security
        script_user root
      }

      vrrp_script check_apiserver {
        script "/usr/local/bin/check_apiserver.sh"
        interval 2
        weight -10
        fall 2
        rise 1
        timeout 2

      }

      vrrp_instance VI_1 {
        state BACKUP
        interface {{ vip_interface }}
        virtual_router_id {{ router_id }}
        priority {{ keepalived_priority }}
        advert_int 1
        authentication {
          auth_type PASS
          auth_pass {{ keepalived_auth_pass }}
        }
        virtual_ipaddress {
          {{ vip_address }}/24
        }
        track_script {
          check_apiserver
        }
        unicast_src_ip {{ hostvars[inventory_hostname].ansible_default_ipv4.address }}
        unicast_peer {
          {% for peer in groups['k8s_masters'] %}
          {% if peer != inventory_hostname %}
          {{ hostvars[peer].ansible_default_ipv4.address }}
          {% endif %}
          {% endfor %}
        }
      }

- name: Restart Keepalived
  systemd:
    name: keepalived
    state: restarted
    daemon_reload: yes

- name: Ensure Keepalived is enabled and started
  systemd:
    name: keepalived
    enabled: yes
    state: started
